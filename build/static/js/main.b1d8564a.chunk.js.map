{"version":3,"sources":["redux/videoListActionTypes.js","apis/youtube.js","redux/videoListActions.js","redux/videoListUtils.js","componants/SearchBar.js","componants/VideoDetails.js","componants/VideoItems.js","componants/VideoList.js","componants/VideoContainer.js","componants/App.js","redux/videoListReducer.js","redux/store.js","index.js"],"names":["VIDEO_LIST_ACTION","axios","create","baseURL","params","part","maxResults","key","process","fetchVideoListSuccess","videoList","type","payload","setSelectedVideo","selectedVideo","fetchVideoListAsync","searchedTerm","dispatch","a","youtube","get","q","response","data","items","transformedList","map","video","title","snippet","thumbnail","thumbnails","high","channelName","channelTitle","videoId","id","console","log","SearchBar","useDispatch","inputRef","useRef","Fragment","className","ref","name","placeholder","hidden","onClick","e","preventDefault","current","value","VideoDetails","useSelector","state","src","frameBorder","allowFullScreen","VideoItems","url","alt","VideoList","index","VideoContainer","App","errorMessage","useEffect","initialState","loading","persistConfig","storage","whitelist","middlewares","thunk","logger","reducers","combineReducers","persistedReducer","persistReducer","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1d8564a.chunk.js","sourcesContent":["export const VIDEO_LIST_ACTION = {\r\n  FETCH_VIDEO_LIST_START: \"FETCH_VIDEO_LIST_START\",\r\n  FETCH_VIDEO_LIST_SUCCESS: \"FETCH_VIDEO_LIST_SUCCESS\",\r\n  FETCH_VIDEO_LIST_FAILURE: \"FETCH_VIDEO_LIST_FAILURE\",\r\n  SET_SELECTED_VIDEO: \"SET_SELECTED_VIDEO\",\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst KEY = process.env.REACT_APP_YOUTUBEKEY;\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://www.googleapis.com/youtube/v3\",\r\n  params: {\r\n    part: \"snippet\",\r\n    maxResults: 7,\r\n    key: KEY,\r\n  },\r\n});\r\n","import { VIDEO_LIST_ACTION } from \"./videoListActionTypes\";\r\nimport youtube from \"../apis/youtube\";\r\nimport { videolistMapped } from \"./videoListUtils\";\r\n\r\nexport const fetchVideoListStart = () => ({\r\n  type: VIDEO_LIST_ACTION.FETCH_VIDEO_LIST_START,\r\n});\r\nexport const fetchVideoListSuccess = (videoList) => ({\r\n  type: VIDEO_LIST_ACTION.FETCH_VIDEO_LIST_SUCCESS,\r\n  payload: videoList,\r\n});\r\nexport const fetchVideoListFailure = () => ({\r\n  type: VIDEO_LIST_ACTION.FETCH_VIDEO_LIST_FAILURE,\r\n});\r\n\r\nexport const setSelectedVideo = (selectedVideo) => ({\r\n  type: VIDEO_LIST_ACTION.SET_SELECTED_VIDEO,\r\n  payload: selectedVideo,\r\n});\r\n\r\nexport const fetchVideoListAsync = (searchedTerm) => async (dispatch) => {\r\n  dispatch(fetchVideoListStart());\r\n  try {\r\n    const response = await youtube.get(\"/search\", {\r\n      params: {\r\n        q: searchedTerm,\r\n      },\r\n    });\r\n\r\n    const transformedList = videolistMapped(response.data.items);\r\n\r\n    dispatch(fetchVideoListSuccess(transformedList));\r\n    dispatch(setSelectedVideo(transformedList[0]));\r\n  } catch (error) {\r\n    console.log(error,\"er\");\r\n    dispatch(fetchVideoListFailure());\r\n  }\r\n  //   setVideoListForPage(response.data.items.slice(0, 2));\r\n};\r\n","export const videolistMapped = (videoList) => {\r\n  const transformedVideoList = videoList.map((video) => {\r\n    return {\r\n      title: video.snippet.title,\r\n      thumbnail: video.snippet.thumbnails.high,\r\n      channelName: video.snippet.channelTitle,\r\n      videoId: video.id.videoId,\r\n    };\r\n  });\r\n  return transformedVideoList;\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { fetchVideoListAsync } from \"../redux/videoListActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst SearchBar = () => {\r\n  const dispatch = useDispatch();\r\n  const inputRef = useRef(\"\");\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!inputRef.current.value) return;\r\n    dispatch(fetchVideoListAsync(inputRef.current.value));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"flex items-center w-full\">\r\n        <form className=\"w-full pt-1 lg:pt-3 pb-2 lg:pb-5\">\r\n          <input\r\n            ref={inputRef}\r\n            type=\"text\"\r\n            name=\"Search\"\r\n            className=\"p-1 md:p-3 w-full text-gray-200 bg-gray-800 outline-none shadow-sm ring-2 ring-gray-800\"\r\n            placeholder=\"Search...\"\r\n          />\r\n          <button hidden type=\"submit\" onClick={onFormSubmit}>\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst VideoDetails = () => {\r\n  const video = useSelector((state) => state.video.selectedVideo);\r\n  if (!video) {\r\n    return <></>;\r\n  }\r\n  return (\r\n    <div className=\"lg:w-8/12 py-2 pb-4 self-baseline lg:py-4 lg:mr-4 xl:mr-12 bg-gray-800 rounded-sm shadow-sm\">\r\n      {/* <video width=\"320\" height=\"240\" controls src={video.videoId}></video> */}\r\n      <iframe\r\n        id=\"ytplayer\"\r\n        className=\"w-11/12 h-60 md:h-96 ml-3 lg:mx-5 rounded-sm shadow-md\"\r\n        src={`https://www.youtube.com/embed/${video.videoId}`}\r\n        frameBorder=\"0\"\r\n        allowFullScreen\r\n      ></iframe>\r\n      <div className=\"flex flex-col mx-5 \">\r\n        <span className=\"flex p-1 px-2 mt-1 md:mt-3 w-max text-md md:text-lg lg:text-xl font-bold bg-gray-800 text-gray-50 rounded-sm shadow-md\">\r\n          {video.channelName}\r\n        </span>\r\n        <span className=\"p-1 px-2 mt-1 md:mt-2 xl:w-5/5 text-gray-200 bg-gray-600 text-sm lg:text-lg font-normal rounded-sm shadow-sm truncate\">\r\n          {video.title}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoDetails;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setSelectedVideo } from \"../redux/videoListActions\";\r\n\r\nconst VideoItems = ({ video }) => {\r\n  const { title, thumbnail, channelName } = video;\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      onClick={() => dispatch(setSelectedVideo(video))}\r\n      className=\"flex m-3 overflow-hidden py-2\r\n    border-b border-gray-400 bg-gray-800 cursor-pointer group hover:bg-gray-700\"\r\n    >\r\n      <img\r\n        src={thumbnail.url}\r\n        alt=\"img\"\r\n        className=\"h-20 w-40 xl:h-28 xl:w-48 p-1\"\r\n      />\r\n      <div className=\"flex flex-col ml-3 \">\r\n        <span className=\" truncate text-gray-300\">{title}</span>\r\n        <span className=\"text-normal text-sm text-gray-400\">{channelName}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default VideoItems;\r\n","import React from \"react\";\r\nimport Videoitems from \"./VideoItems\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst VideoList = () => {\r\n  const videoList = useSelector((state) => state.video.videoList);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"w-auto mt-4 lg:mt-0 lg:w-4/12 h-screen bg-gray-800 rounded-sm shadow-sm\r\n        overflow-y-auto  scrollbar scrollbar-thin scroll scrollbar-thumb-gray-400 scrollbar-track-gray-800\r\n       \"\r\n      >\r\n        {videoList?.map((video, index) => (\r\n          <Videoitems video={video} key={index} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default VideoList;\r\n","import React from \"react\";\r\nimport VideoDetails from \"./VideoDetails\";\r\nimport VideoList from \"./VideoList\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction VideoContainer() {\r\n  const videoList = useSelector((state) => state.video.videoList);\r\n  console.log(videoList, \"list\");\r\n  return (\r\n    <div className=\"lg:flex my-3\">\r\n      {/* /// Selected video */}\r\n      <VideoDetails />\r\n\r\n      {/* /// videoList */}\r\n      <VideoList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchVideoListAsync } from \"../redux/videoListActions\";\r\n\r\nimport \"../index.css\";\r\n\r\nimport SearchBar from \"./SearchBar\";\r\nimport VideoContainer from \"./VideoContainer\";\r\n\r\nconst App = () => {\r\n  const errorMessage = useSelector((state) => state.video.errorMessage);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchVideoListAsync(\"neymar\"));\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col m-5 mx-5 sm:mx-10 md:mx-20 lg:mx-40\">\r\n        {errorMessage ? (\r\n          <div className=\"p-3 text-xl bg-red-200 rounded-sm font-serif\">\r\n            {errorMessage}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {/* Search Bar */}\r\n            <SearchBar />\r\n\r\n            {/* Video Container */}\r\n            <VideoContainer />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { VIDEO_LIST_ACTION } from \"./videoListActionTypes\";\r\n\r\nconst initialState = {\r\n  videoList: [],\r\n  selectedVideo: null,\r\n  loading: false,\r\n  errorMessage: null,\r\n};\r\n\r\nexport const videoReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case VIDEO_LIST_ACTION.FETCH_VIDEO_LIST_START:\r\n      return { ...state, loading: true };\r\n\r\n    case VIDEO_LIST_ACTION.FETCH_VIDEO_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        videoList: payload,\r\n        loading: false,\r\n        errorMessage: null,\r\n      };\r\n\r\n    case VIDEO_LIST_ACTION.FETCH_VIDEO_LIST_FAILURE:\r\n      return { ...state, loading: false, errorMessage: \"Server error please try again after some time\" };\r\n\r\n    case VIDEO_LIST_ACTION.SET_SELECTED_VIDEO:\r\n      return { ...state, selectedVideo: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { videoReducer } from \"./videoListReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"video\"],\r\n};\r\n\r\nconst middlewares = [thunk, logger];\r\n\r\nconst reducers = combineReducers({\r\n  video: videoReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  applyMiddleware(...middlewares)\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./componants/App\";\r\n// import * as serviceWorker from \"./serviceWorker\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store, persistor } from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// serviceWorker.register();\r\n"],"sourceRoot":""}